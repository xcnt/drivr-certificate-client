name: ci

on: [push, workflow_dispatch]

jobs:
  select-runner-deployment:
    name: select-runner-deployment
    runs-on: default
    outputs:
      runner: ${{ env.RUNNER_DEPLOYMENT }}
    steps:
      - run: echo "RUNNER_DEPLOYMENT=default" >> $GITHUB_ENV
      - run: echo "RUNNER_DEPLOYMENT=renovate" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/heads/renovate')

  build:
    needs: [select-runner-deployment]
    runs-on: ${{ needs.select-runner-deployment.outputs.runner }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'
      - name: Install dependencies
        run: go get ./...
      - name: Generate code
        run: go generate ./...
      - name: Lint
        run: go tool github.com/golangci/golangci-lint/cmd/golangci-lint run -v
      - name: Check for vulnerabilities
        run: go tool golang.org/x/vuln/cmd/govulncheck ./...
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -v ./...

  release:
    name: "Release"
    needs:
      - select-runner-deployment
      - build
    runs-on: ${{ needs.select-runner-deployment.outputs.runner }}
    concurrency: release
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Add plugin for conventional commits
        run: npm install conventional-changelog-conventionalcommits
      - name: Release to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.CI_AUTH_TOKEN }}
          GIT_AUTHOR_NAME: XCNT CI
          GIT_AUTHOR_EMAIL: dev-infra@xcnt.io
          GIT_COMMITTER_NAME: XCNT CI
          GIT_COMMITTER_EMAIL: dev-infra@xcnt.io
        run: npx semantic-release

  gorelease:
    needs:
      - select-runner-deployment
      - release
    runs-on: ${{ needs.select-runner-deployment.outputs.runner }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'
      - name: Install dependencies
        run: go get ./...
      - name: Generate code
        run: go generate ./...
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.CI_AUTH_TOKEN }}

